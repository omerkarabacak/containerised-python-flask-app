name: Main

on:
  push:
    branches: [ main ]

env:
  VERSION_PREFIX: "1.0"
  NAME: "container-stack-containerisedapprepository181f38df-qmk6dzgbaa3p"
  ECR: "906440755908.dkr.ecr.eu-central-1.amazonaws.com"

jobs:    
  package-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Package Image and Push to ECR
      run: |
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin $ECR
          docker build -t $NAME .
          docker tag $NAME $ECR/$NAME:$VERSION_PREFIX.$GITHUB_RUN_NUMBER
          docker tag $NAME $ECR/$NAME:latest
          docker push $ECR/$NAME:$VERSION_PREFIX.$GITHUB_RUN_NUMBER
          docker push $ECR/$NAME:latest
          echo "$ECR/$NAME:$VERSION_PREFIX.$GITHUB_RUN_NUMBER published"
    
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: web
        image: ${{ env.ECR }}/${{ env.NAME }}:${{ env.VERSION_PREFIX }}.${{ env.GITHUB_RUN_NUMBER }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition:  ${{ steps.task-def.outputs.task-definition }}
        service: container-stack-ContainerisedAppFargateService3ABC1342-ziypVOnK9RV6
        cluster: container-stack-ContainerisedAppECSCluster86B29B23-WWITJ1HCfUVE
        wait-for-service-stability: true